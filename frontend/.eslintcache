[{"C:\\Users\\theod\\Desktop\\projects\\pydict_weather_fullstack\\frontend\\src\\reportWebVitals.js":"1","C:\\Users\\theod\\Desktop\\projects\\pydict_weather_fullstack\\frontend\\src\\Home.js":"2","C:\\Users\\theod\\Desktop\\projects\\pydict_weather_fullstack\\frontend\\src\\PredictionCardsLayout.js":"3","C:\\Users\\theod\\Desktop\\projects\\pydict_weather_fullstack\\frontend\\src\\index.js":"4","C:\\Users\\theod\\Desktop\\projects\\pydict_weather_fullstack\\frontend\\src\\PredictionCard.js":"5","C:\\Users\\theod\\Desktop\\projects\\pydict_weather_fullstack\\frontend\\src\\App.js":"6"},{"size":362,"mtime":1608626298279,"results":"7","hashOfConfig":"8"},{"size":2019,"mtime":1611266245828,"results":"9","hashOfConfig":"8"},{"size":2114,"mtime":1611266020827,"results":"10","hashOfConfig":"8"},{"size":500,"mtime":1611261783148,"results":"11","hashOfConfig":"8"},{"size":491,"mtime":1611265936125,"results":"12","hashOfConfig":"8"},{"size":112,"mtime":1611153125365,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1jwisit",{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\theod\\Desktop\\projects\\pydict_weather_fullstack\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\theod\\Desktop\\projects\\pydict_weather_fullstack\\frontend\\src\\Home.js",["27"],"import React, { useState } from 'react';\r\nimport { Input, Space, Form, Row, Col, Typography, Button } from 'antd';\r\nimport './App.css';\r\nimport PredictionCardsLayout from './PredictionCardsLayout'\r\n\r\nconst { Title } = Typography;\r\n\r\nasync function seacrhCity(city) {\r\n  const data = {\r\n    \"City\": city\r\n  }\r\n  try {\r\n    const fetched_data = await fetch(\r\n      'http://127.0.0.1:5000/home/'\r\n      , \r\n      {\r\n        method: 'POST',\r\n        body: JSON.stringify(data)\r\n      }\r\n    );\r\n    const prediction_data = await fetched_data.json();\r\n    return prediction_data;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nconst Home = () => {\r\n  const [show, setShow] = useState(false);\r\n  const [city, setCity] = useState(\"\");\r\n  const [searchResults, setSearchResults] = useState(\"\");\r\n\r\n  const updateCity = (e) => {\r\n    setCity(e.target.value);\r\n  };\r\n  \r\n  const onSearch = async (e) => {\r\n    e.preventDefault();\r\n    if (city == \"\") {\r\n      alert(\"Please fill in all fields\");\r\n      return false;\r\n    };\r\n    const response = await seacrhCity(city);\r\n    setSearchResults(response);\r\n    setShow(true);\r\n  };\r\n\r\n  return(\r\n    <div className=\"App\">\r\n      <Row>\r\n        <Col span={12} offset={6}>\r\n          <Title level={3}>Search for a city</Title>\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row>\r\n        <Col span={12} offset={6}>\r\n          <Space>\r\n            <Form>\r\n              <Form.Item\r\n                label=\"City\"\r\n                name=\"City\"      \r\n                onChange={updateCity}\r\n                value={city}\r\n              >\r\n                <Input placeholder=\"Search for a city\"/>\r\n              </Form.Item>\r\n            </Form>\r\n          </Space>\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row>\r\n        <Col span={12} offset={6}>\r\n          <Button type=\"primary\" onClick={onSearch}>Search</Button>\r\n        </Col>\r\n      </Row>\r\n\r\n      <br></br>\r\n\r\n      {show && ( <PredictionCardsLayout searchResults={searchResults} /> )}\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Home;","C:\\Users\\theod\\Desktop\\projects\\pydict_weather_fullstack\\frontend\\src\\PredictionCardsLayout.js",[],"C:\\Users\\theod\\Desktop\\projects\\pydict_weather_fullstack\\frontend\\src\\index.js",[],"C:\\Users\\theod\\Desktop\\projects\\pydict_weather_fullstack\\frontend\\src\\PredictionCard.js",[],"C:\\Users\\theod\\Desktop\\projects\\pydict_weather_fullstack\\frontend\\src\\App.js",[],{"ruleId":"28","severity":1,"message":"29","line":39,"column":14,"nodeType":"30","messageId":"31","endLine":39,"endColumn":16},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected"]